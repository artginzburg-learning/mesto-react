{"version":3,"sources":["utils/localStorageJSON.js","utils/api.js","utils/utils.js","contexts/CurrentUserContext.js","images/logo.svg","components/Header.js","components/Card.js","components/Main.js","components/Footer.js","components/PopupWithForm.js","components/popups/PopupInput.js","components/popups/EditProfilePopup.js","components/popups/EditAvatarPopup.js","components/popups/AddPlacePopup.js","components/popups/ConfirmDeletePopup.js","components/popups/ImagePopup.js","components/App.js","reportWebVitals.js","utils/FormValidator.js","utils/enableValidations.js","index.js"],"names":["useStateWithLocalStorage","computed","defaultForComputed","localStorageJSON","localStorage","JSON","parse","newValue","stringify","initiateLocalStorageJSON","React","useState","currentState","setCurrentState","useEffect","api","options","_handleFetch","res","ok","json","Promise","reject","status","editProfile","name","about","_customFetch","addCard","link","deleteCard","cardId","changeLikeCardStatus","updateAvatar","avatar","this","_baseUrl","baseUrl","_headers","headers","target","method","body","fetch","then","authorization","popupSelectors","defaultFormConfig","formSelector","inputSelector","submitButtonSelector","inputErrorClass","errorClass","defaultUserState","CurrentUserStateContext","createContext","CurrentUserDispatchContext","CurrentUserProvider","children","currentUser","setCurrentUser","getUserInfo","Provider","value","useCurrentUser","context","useContext","undefined","Error","useCurrentUserDispatcher","sendApiUpdate","dispatch","user","updates","func","a","updatedUser","Header","className","href","alt","src","logo","Card","props","card","likes","isTemporarilyLocal","owner","cardDeleteButtonClassName","_id","cardLikeButtonClassName","some","i","onClick","onCardClick","onCardDelete","type","onCardLike","length","Main","onEditAvatar","onEditProfile","onAddPlace","cards","map","Math","random","Footer","rel","author","PopupWithForm","onClose","isOpen","id","title","onSubmit","e","preventDefault","reset","document","activeElement","blur","action","buttonTitle","PopupInput","forwardRef","ref","defaultType","minLength","required","EditProfilePopup","setName","setAbout","onUpdateUser","onChange","autoComplete","autoCapitalize","placeholder","maxLength","EditAvatarPopup","createRef","current","onUpdateAvatar","AddPlacePopup","setTitle","setLink","onReset","ConfirmDeletePopup","ImagePopup","App","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isConfirmDeletePopupOpen","setIsConfirmDeletePopupOpen","isImagePopupOpen","setIsImagePopupOpen","selectedCard","setSelectedCard","setCards","oldCards","isLiked","expectedCardLikes","filter","like","expectedCard","c","newCard","closeAllPopups","handlePopupClick","currentTarget","classList","contains","getInitialCards","handleUpdateUser","handleUpdateAvatar","escHandler","useCallback","key","listenerArgs","addEventListener","removeEventListener","catch","error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","FormValidator","data","element","_showInputError","inputElement","errorMessage","errorElement","_element","querySelector","add","_data","textContent","_hideInputError","remove","_resetFormErrors","_inputList","forEach","_toggleButtonState","_checkInputValidity","validity","valid","validationMessage","_hasInvalidInput","inputList","disable","_buttonElement","disabled","_validationHandler","_setListeners","Array","from","querySelectorAll","popupsToValidate","ReactDOM","render","StrictMode","getElementById","popupSelector","enableValidation"],"mappings":"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","file":"static/js/main.8a01b0c5.chunk.js","sourcesContent":["import React from 'react';\n\nfunction initiateLocalStorageJSON(computed, defaultForComputed) {\n  return {\n    get [computed]() {\n      return localStorage[computed] ? JSON.parse(localStorage[computed]) : defaultForComputed;\n    },\n    set [computed](newValue) {\n      return localStorage[computed] = JSON.stringify(newValue);\n    }\n  };\n}\n\nexport default function useStateWithLocalStorage(computed, defaultForComputed) {\n  const localStorageJSON = initiateLocalStorageJSON(computed, defaultForComputed);\n\n  const [currentState, setCurrentState] = React.useState(localStorageJSON[computed]);\n\n  React.useEffect(() => {\n    localStorageJSON[computed] = currentState;\n  }, [currentState, localStorageJSON, computed]);\n\n  return [currentState, setCurrentState];\n}","const cohortId = 'cohort-24';\nconst token = '70313b07-c3c0-40aa-a296-04d0e6bc7885';\n\nconst api = {\n  url: 'mesto.nomoreparties.co',\n  protocol: 'https://',\n  version: 'v1',\n};\n\nclass Api {\n  constructor(options) {\n    this._baseUrl = options.baseUrl;\n    this._headers = options.headers;\n  }\n\n  _handleFetch = res =>\n    res.ok\n      ? res.json()\n      : Promise.reject(`Ошибка: ${res.status}`);\n\n  _customFetch(target, method, body) {\n    const options = {\n      headers: this._headers\n    };\n\n    if (method && (method !== 'GET')) {\n      options.method = method;\n      if (method !== 'DELETE') {\n        options.headers['Content-Type'] = 'application/json';\n      }\n    }\n\n    if (body) {\n      options.body = JSON.stringify(body);\n    }\n\n    return fetch(`${this._baseUrl}/${target}`, options)\n      .then(this._handleFetch);\n  }\n\n  getUserInfo() {\n    return this._customFetch('users/me');\n  }\n\n  getInitialCards() {\n    return this._customFetch('cards');\n  }\n\n  editProfile = ({ name, about }) =>\n    this._customFetch('users/me', 'PATCH', {\n      name,\n      about\n    });\n\n  addCard = (name, link) =>\n    this._customFetch('cards', 'POST', {\n      name,\n      link\n    });\n\n  deleteCard = cardId =>\n    this._customFetch(`cards/${cardId}`, 'DELETE');\n\n  changeLikeCardStatus = (cardId, status) =>\n  this._customFetch(`cards/likes/${cardId}`, status ? 'PUT' : 'DELETE');\n\n  updateAvatar = ({ avatar }) =>\n    this._customFetch('users/me/avatar', 'PATCH', {\n      avatar\n    });\n}\n\nexport default new Api({\n  baseUrl: `${api.protocol}${api.url}/${api.version}/${cohortId}`,\n  headers: {\n    authorization: token\n  }\n}); ","export const popupSelectors = {\n  closeButtonClass: 'popup__close-button',\n}\n\nexport const defaultFormConfig = {\n  formSelector: '.popup__form',\n  inputSelector: '.popup__input',\n  submitButtonSelector: '.popup__button',\n  inputErrorClass: 'popup__input_type_error',\n  errorClass: 'popup__error_visible',\n};","import React from 'react';\n\nimport useStateWithLocalStorage from '../utils/localStorageJSON';\nimport api from '../utils/api';\n\nconst defaultUserState = {\n  name: 'Неизвестный',\n  about: 'Потеряно соединение с сервером',\n  avatar: '',\n};\n\nconst CurrentUserStateContext = React.createContext();\nconst CurrentUserDispatchContext = React.createContext();\n\nfunction CurrentUserProvider({ children }) {\n  const [currentUser, setCurrentUser] = useStateWithLocalStorage('currentUser', defaultUserState);\n\n  React.useEffect(() => {\n    api.getUserInfo().then(setCurrentUser);\n  }, [setCurrentUser]);\n\n  return (\n    <CurrentUserStateContext.Provider value={currentUser}>\n      <CurrentUserDispatchContext.Provider value={setCurrentUser}>\n        {children}\n      </CurrentUserDispatchContext.Provider>\n    </CurrentUserStateContext.Provider>\n  );\n}\n\nfunction useCurrentUser() {\n  const context = React.useContext(CurrentUserStateContext);\n  if (context === undefined) {\n    throw new Error('useCurrentUser must be used within a CurrentUserProvider');\n  }\n  return context;\n}\n\nfunction useCurrentUserDispatcher() {\n  const context = React.useContext(CurrentUserDispatchContext);\n  if (context === undefined) {\n    throw new Error('useCurrentUserDispatcher must be used within a CurrentUserProvider');\n  }\n  return context;\n}\n\nasync function sendApiUpdate(dispatch, user, updates, func) {\n  dispatch({...user, ...updates});\n\n  try {\n    const updatedUser = await api[func](updates);\n    dispatch(updatedUser);\n  } catch (error) {\n    dispatch(user);\n    throw error;\n  }\n}\n\nexport { CurrentUserProvider, useCurrentUser, useCurrentUserDispatcher, sendApiUpdate };","export default __webpack_public_path__ + \"static/media/logo.6fa47d29.svg\";","import logo from '../images/logo.svg';\n\nfunction Header() {\n  return (\n    <header className=\"header\">\n\n      <a target=\"_self\" href=\"https://github.com/artginzburg/mesto-react\" className=\"logo header__logo\">\n        <img className=\"logo__img\" alt=\"Mesto\" src={logo} />\n      </a>\n\n    </header>\n  );\n}\n\nexport default Header;","import { useCurrentUser } from '../contexts/CurrentUserContext';\n\nfunction Card(props) {\n  const card = props.card;\n\n  card.likes = card.likes ?? [];\n\n  const currentUser = useCurrentUser();\n\n  if (card.isTemporarilyLocal) {\n    card.owner = currentUser;\n  }\n\n  const isOwn = card.owner._id === currentUser._id;\n\n  const cardDeleteButtonClassName = (\n    'element__trash-button' + (isOwn ? ' element__trash-button_visible' : '')\n  );\n\n  const isLiked = card.likes.some(i => i._id === currentUser._id);\n\n  const cardLikeButtonClassName = (\n    'element__like-button' + (isLiked ? ' element__like-button_active' : '')\n  );\n\n  function handleImageClick() {\n    props.onCardClick(card);\n  }\n\n  function handleLikeClick() {\n    if (card.isTemporarilyLocal) return;\n    props.onCardLike(card);\n  }\n\n  function handleDeleteClick() {\n    if (card.isTemporarilyLocal) return;\n    props.onCardDelete(card);\n  }\n\n  return (\n    <li className=\"element\">\n      <img onClick={handleImageClick} className=\"element__image\" alt={card.name} src={card.link} />\n      <button onClick={handleDeleteClick} type=\"reset\" className={cardDeleteButtonClassName} />\n      <div className=\"element__container\">\n        <h2 className=\"element__title\">{card.name}</h2>\n        <div className=\"element__likes\">\n          <button onClick={handleLikeClick} type=\"button\" className={cardLikeButtonClassName} />\n          <p className=\"element__like-counter\">\n            {card.likes.length}\n          </p>\n        </div>\n      </div>\n    </li>\n  );\n}\n\nexport default Card;","import Card from './Card';\n\nimport { useCurrentUser } from '../contexts/CurrentUserContext';\n\nexport default function Main(props) {\n  const currentUser = useCurrentUser();\n\n  return (\n    <main className=\"content\">\n\n      <section className=\"profile\">\n        <button onClick={props.onEditAvatar} type=\"button\" className=\"profile__avatar-container\">\n          <img alt=\"Аватар\" className=\"profile__avatar\" src={currentUser.avatar} />\n        </button>\n        <div className=\"profile__info\">\n          <h1 className=\"profile__name\">{currentUser.name}</h1>\n          <p className=\"profile__description\">{currentUser.about}</p>\n          <button onClick={props.onEditProfile} type=\"button\" className=\"profile__edit-button\" />\n        </div>\n        <button onClick={props.onAddPlace} type=\"button\" className=\"profile__add-button\" />\n      </section>\n\n      <section className=\"elements\">\n        <ul className=\"elements__list\">\n          {props.cards.map(card =>\n            <Card key={card._id ?? Math.random()} onCardClick={props.onCardClick} onCardLike={props.onCardLike} onCardDelete={props.onCardDelete} card={card} />\n          )}\n        </ul>\n      </section>\n\n    </main>\n  );\n}","import { author } from '../../package.json';\n\nfunction Footer() {\n  return (\n    <footer className=\"footer\">\n\n      <a target=\"_blank\" rel=\"noreferrer\" href=\"https://github.com/artginzburg\" className=\"footer__copyright\">&copy; 2021 {author}</a>\n\n    </footer>\n  );\n}\n\nexport default Footer;","import { popupSelectors } from '../utils/utils';\n\nfunction PopupWithForm(props) {\n  function handleSubmit(e) {\n    if (props.onSubmit) {\n      e.preventDefault();\n\n      props.onSubmit();\n    }\n\n    if (props.children) {\n      e.target.reset();\n    }\n\n    if (props.onSubmit) {\n      document.activeElement.blur(); // fixes mobile keyboard being stuck on the screen after form submission (due to `event.preventDefault()`)\n    }\n  }\n\n  return (\n    <section onClick={props.onClose} className={'popup' + (props.isOpen ? ' popup_opened' : '')} id={props.name}>\n      <div className=\"popup__container\">\n\n        <button type=\"reset\" className={popupSelectors.closeButtonClass} />\n        <h2 className=\"popup__title\">{props.title}</h2>\n\n        <form onSubmit={handleSubmit} className=\"popup__form\" action=\"#\">\n\n          {props.children}\n\n          <button type=\"submit\" className=\"popup__button\">{props.buttonTitle ?? 'Сохранить'}</button>\n\n        </form>\n\n      </div>\n    </section>\n  );\n}\n\nexport default PopupWithForm;","import React from 'react';\n\nconst PopupInput = React.forwardRef((props, ref) => {\n  const defaultType = 'text';\n\n  const type = props.type ?? defaultType;\n\n  const minLength = (type === defaultType)\n    ? 2\n    : null\n  ;\n\n  const required = props.required ?? true;\n\n  return (\n    <>\n      <input {...props} ref={ref} className=\"popup__input\" type={type} minLength={props.minLength ?? minLength} required={required} />\n      <p className=\"popup__error\" id={`${props.id}-error`} />\n    </>\n  )\n})\n\nexport default PopupInput;","import React from 'react';\n\nimport { useCurrentUser, useCurrentUserDispatcher, sendApiUpdate } from '../../contexts/CurrentUserContext';\n\nimport PopupWithForm from '../PopupWithForm';\n\nimport PopupInput from './PopupInput';\n\nexport default function EditProfilePopup(props) {\n  const [name, setName] = React.useState('');\n  const [about, setAbout] = React.useState('');\n\n  const currentUser = useCurrentUser();\n  const setCurrentUser = useCurrentUserDispatcher();\n\n  React.useEffect(() => {\n    setName(currentUser.name);\n    setAbout(currentUser.about);\n  }, [currentUser]);\n\n  function handleSubmit() {\n    sendApiUpdate(setCurrentUser, currentUser, {\n      name,\n      about,\n    }, 'editProfile');\n\n    props.onUpdateUser();\n  }\n\n  function handleNameChange(e) {\n    setName(e.target.value);\n  }\n\n  function handleAboutChange(e) {\n    setAbout(e.target.value);\n  }\n\n  return (\n    <PopupWithForm {...props} onSubmit={handleSubmit} title=\"Редактировать профиль\" name=\"profile-editor\">\n\n      <PopupInput value={name} onChange={handleNameChange} autoComplete=\"name\" autoCapitalize=\"words\" name=\"name\" id=\"profile-name\" placeholder=\"Имя\" maxLength=\"40\" />\n\n      <PopupInput value={about} onChange={handleAboutChange} name=\"about\" id=\"profile-about\" placeholder=\"О себе\" maxLength=\"200\" />\n\n    </PopupWithForm>\n  );\n}","import { createRef } from 'react';\n\nimport { useCurrentUser, useCurrentUserDispatcher, sendApiUpdate } from '../../contexts/CurrentUserContext';\n\nimport PopupWithForm from '../PopupWithForm';\n\nimport PopupInput from './PopupInput';\n\nexport default function EditAvatarPopup(props) {\n  const ref = createRef();\n\n  const currentUser = useCurrentUser();\n  const setCurrentUser = useCurrentUserDispatcher();\n\n  function handleSubmit() {\n    sendApiUpdate(setCurrentUser, currentUser, {\n      avatar: ref.current.value\n    }, 'updateAvatar');\n\n    props.onUpdateAvatar();\n  }\n\n  return (\n    <PopupWithForm {...props} onSubmit={handleSubmit} title=\"Обновить аватар\" name=\"avatar-editor\">\n\n      <PopupInput ref={ref} type=\"url\" name=\"avatar\" id=\"profile-avatar\" placeholder=\"Ссылка на картинку\" />\n\n    </PopupWithForm>\n  );\n}","import { useState } from 'react';\n\nimport PopupWithForm from '../PopupWithForm';\n\nimport PopupInput from './PopupInput';\n\nexport default function AddPlacePopup(props) {\n  const [title, setTitle] = useState('');\n  const [link, setLink] = useState('');\n\n  function handleSubmit() {\n    props.onAddPlace(title, link);\n  }\n\n  function handleReset() {\n    setTitle('');\n    setLink('');\n  }\n\n  function handleTitleChange(e) {\n    setTitle(e.target.value);\n  }\n\n  function handleLinkChange(e) {\n    setLink(e.target.value);\n  }\n\n  return (\n    <PopupWithForm {...props} onReset={handleReset} onSubmit={handleSubmit} title=\"Новое место\" name=\"element-editor\" buttonTitle=\"Создать\">\n\n      <PopupInput value={title} onChange={handleTitleChange} name=\"title\" id=\"element-title\" placeholder=\"Название\" maxLength=\"30\" />\n\n      <PopupInput value={link} onChange={handleLinkChange} type=\"url\" name=\"link\" id=\"element-link\" placeholder=\"Ссылка на картинку\" />\n\n    </PopupWithForm>\n  );\n}","import PopupWithForm from '../PopupWithForm';\n\nexport default function ConfirmDeletePopup(props) {\n  function handleSubmit() {\n    props.onCardDelete(props.card);\n  }\n\n  return (\n    <PopupWithForm {...props} onSubmit={handleSubmit} title=\"Вы уверены?\" name=\"delete-confirmation\" buttonTitle=\"Да\" />\n  );\n}","import { popupSelectors } from '../../utils/utils';\n\nfunction ImagePopup(props) {\n  const card = props.card;\n\n  return (\n    <section onClick={props.onClose} className={'popup popup_type_image' + (props.isOpen ? ' popup_opened' : '')} id=\"image-viewer\">\n      <figure className=\"popup__figure\">\n\n        <button type=\"button\" className={`${popupSelectors.closeButtonClass} ${popupSelectors.closeButtonClass}_parent-corners_straight`} />\n        <img className=\"popup__image\" alt={card.name} src={card.link} />\n        <figcaption className=\"popup__caption\">{card.name}</figcaption>\n\n      </figure>\n    </section>\n  );\n}\n\nexport default ImagePopup;","import React from 'react';\n\nimport useStateWithLocalStorage from '../utils/localStorageJSON';\nimport api from '../utils/api';\nimport { popupSelectors } from '../utils/utils';\n\nimport { useCurrentUser } from '../contexts/CurrentUserContext';\n\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\n\nimport EditProfilePopup from './popups/EditProfilePopup';\nimport EditAvatarPopup from './popups/EditAvatarPopup';\nimport AddPlacePopup from './popups/AddPlacePopup';\nimport ConfirmDeletePopup from './popups/ConfirmDeletePopup';\nimport ImagePopup from './popups/ImagePopup';\n\nexport default function App() {\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n  const [isConfirmDeletePopupOpen, setIsConfirmDeletePopupOpen] = React.useState(false);\n  const [isImagePopupOpen, setIsImagePopupOpen] = React.useState(false);\n\n  const [selectedCard, setSelectedCard] = React.useState({});\n\n  const [cards, setCards] = useStateWithLocalStorage('cards', []);\n\n\n  const currentUser = useCurrentUser();\n\n  React.useEffect(() => {\n    api.getInitialCards().then(setCards)\n  }, [setCards]);\n\n  async function handleCardLike(card) {\n    const oldCards = cards;\n\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n\n    const expectedCardLikes = isLiked\n      ? card.likes.filter(like => like._id !== currentUser._id)\n      : [...card.likes, currentUser];\n\n    const expectedCard = {...card, likes: expectedCardLikes};\n\n    setCards(\n      cards.map(c =>\n        c._id === card._id\n          ? expectedCard\n          : c\n      )\n    );\n\n    try {\n      const newCard = await api.changeLikeCardStatus(card._id, !isLiked);\n      setCards(\n        cards.map(c =>\n          c._id === card._id\n            ? newCard\n            : c\n        )\n      );\n    } catch (error) {\n      setCards(oldCards);\n      throw error;\n    }\n  }\n\n  function closeAllPopups() {\n    setIsEditAvatarPopupOpen(false);\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setIsConfirmDeletePopupOpen(false);\n    setIsImagePopupOpen(false);\n  }\n\n  function handleCardDelete(card) {\n    const oldCards = cards;\n\n    setCards(\n      cards.filter(c =>\n        c._id !== card._id\n      )\n    );\n\n    api.deleteCard(card._id)\n      .catch(error => {\n        setCards(oldCards);\n        throw error;\n      })\n    ;\n\n    closeAllPopups();\n  }\n\n\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n  }\n\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n  }\n\n  function handleConfirmDeleteClick(card) {\n    setSelectedCard(card);\n\n    setIsConfirmDeletePopupOpen(true);\n  }\n\n  function handleCardClick(card) {\n    setSelectedCard(card);\n\n    setIsImagePopupOpen(true);\n  }\n\n  function handlePopupClick(e) {\n    if (e.target === e.currentTarget || e.target.classList.contains(popupSelectors.closeButtonClass)) {\n      closeAllPopups();\n    }\n  }\n\n  const handleUpdateUser = closeAllPopups;\n  const handleUpdateAvatar = closeAllPopups;\n\n  function handleAddPlaceSubmit(title, link) {\n    const oldCards = cards;\n\n    const expectedCard = {\n      isTemporarilyLocal: true,\n      name: title,\n      link\n    };\n\n    setCards([expectedCard, ...cards]);\n\n    api.addCard(title, link)\n      .then(newCard =>\n        setCards([newCard, ...cards])\n      )\n      .catch(() =>\n        setCards(oldCards)\n      );\n\n    closeAllPopups();\n  }\n\n\n  const escHandler = React.useCallback(e => {\n    if (e.key === 'Escape') {\n      closeAllPopups();\n    }\n  }, []);\n\n  React.useEffect(() => {\n    const listenerArgs = [ 'keydown', escHandler, false ];\n\n    document.addEventListener(...listenerArgs);\n\n    return () =>\n      document.removeEventListener(...listenerArgs);\n  }, [escHandler]);\n\n  return (\n    <>\n\n      <Header />\n      <Main\n        onEditProfile={handleEditProfileClick}\n        onAddPlace={handleAddPlaceClick}\n        onEditAvatar={handleEditAvatarClick}\n        cards={cards}\n        onCardClick={handleCardClick}\n        onCardLike={handleCardLike}\n        onCardDelete={handleConfirmDeleteClick}\n      />\n      <Footer />\n\n      <EditProfilePopup onUpdateUser={handleUpdateUser} isOpen={isEditProfilePopupOpen} onClose={handlePopupClick} />\n\n      <AddPlacePopup onAddPlace={handleAddPlaceSubmit} isOpen={isAddPlacePopupOpen} onClose={handlePopupClick} />\n\n      <EditAvatarPopup onUpdateAvatar={handleUpdateAvatar} isOpen={isEditAvatarPopupOpen} onClose={handlePopupClick} />\n\n      <ConfirmDeletePopup card={selectedCard} onCardDelete={handleCardDelete} isOpen={isConfirmDeletePopupOpen} onClose={handlePopupClick} />\n\n      <ImagePopup card={selectedCard} isOpen={isImagePopupOpen} onClose={handlePopupClick} />\n\n    </>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export default class FormValidator {\n  constructor(data, element) {\n    this._data = data;\n    this._element = element;\n\n    this._inputList = Array.from(\n      this._element.querySelectorAll(this._data.inputSelector)\n    );\n\n    this._buttonElement = this._element.querySelector(this._data.submitButtonSelector);\n  }\n\n  enableValidation() {\n    this._toggleButtonState();\n\n    this._setListeners();\n  }\n\n  _showInputError = (inputElement, errorMessage) => {\n    const errorElement = this._element.querySelector(`#${inputElement.id}-error`);\n    inputElement.classList.add(this._data.inputErrorClass);\n    errorElement.textContent = errorMessage;\n    errorElement.classList.add(this._data.errorClass);\n  }\n\n  _hideInputError = inputElement => {\n    const errorElement = this._element.querySelector(`#${inputElement.id}-error`);\n    inputElement.classList.remove(this._data.inputErrorClass);\n    errorElement.classList.remove(this._data.errorClass);\n    errorElement.textContent = '';\n  }\n\n  _resetFormErrors = () => {\n    this._inputList.forEach(inputElement =>\n      this._hideInputError(inputElement)\n    );\n    this._toggleButtonState(1);\n  }\n\n  _checkInputValidity = inputElement =>\n    inputElement.validity.valid\n      ? this._hideInputError(inputElement)\n      : this._showInputError(inputElement, inputElement.validationMessage);\n\n  _hasInvalidInput = inputList => inputList.some(inputElement => !inputElement.validity.valid)\n\n  _toggleButtonState = disable =>\n    this._buttonElement.disabled = disable || this._hasInvalidInput(this._inputList);\n\n  _validationHandler = inputElement => {\n    this._checkInputValidity(inputElement);\n\n    this._toggleButtonState();\n  }\n\n  _setListeners = () => {\n    this._element.addEventListener('reset', this._resetFormErrors);\n\n    this._inputList.forEach(inputElement =>\n      inputElement.addEventListener('input', () => this._validationHandler(inputElement))\n    );\n  }\n}","import FormValidator from './FormValidator';\nimport { defaultFormConfig } from './utils';\n\nconst popupsToValidate = [\n  '#element-editor',\n  '#avatar-editor',\n  '#profile-editor',\n];\n\nexport default function enableValidations() {\n  popupsToValidate.forEach(popupSelector => {\n    const profileEditorValidator = new FormValidator(\n      defaultFormConfig,\n      document.querySelector(popupSelector).querySelector(defaultFormConfig.formSelector)\n    );\n    profileEditorValidator.enableValidation();\n  });\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nimport { CurrentUserProvider } from './contexts/CurrentUserContext';\n\nimport enableValidations from './utils/enableValidations';\n\nReactDOM.render(\n  <React.StrictMode>\n    <CurrentUserProvider>\n      <App />\n    </CurrentUserProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nenableValidations();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}