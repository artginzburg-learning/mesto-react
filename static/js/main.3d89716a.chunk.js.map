{"version":3,"sources":["images/logo.svg","components/Header.js","components/Card.js","utils/api.js","components/Main.js","components/Footer.js","components/PopupWithForm.js","components/ImagePopup.js","components/App.js","reportWebVitals.js","index.js"],"names":["Header","className","target","href","alt","src","logo","Card","props","onClick","onCardClick","card","name","link","type","likes","length","api","options","_handleFetch","res","ok","json","Promise","reject","status","editProfile","about","_customFetch","addCard","deleteCard","cardId","likeCard","unLikeCard","updateAvatar","avatar","this","_baseUrl","baseUrl","_headers","headers","method","body","JSON","stringify","fetch","then","authorization","Main","state","userName","userDescription","userAvatar","cards","getUserInfo","setState","getInitialCards","onEditAvatar","onEditProfile","onAddPlace","map","_id","React","Component","Footer","rel","PopupWithForm","isOpen","id","onClose","title","action","children","buttonTitle","ImagePopup","App","useState","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","selectedCard","setSelectedCard","closeAllPopups","autoComplete","autoCapitalize","placeholder","minLength","maxLength","required","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3d89716a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6fa47d29.svg\";","import logo from '../images/logo.svg';\n\nfunction Header() {\n  return (\n    <header className=\"header\">\n\n      <a target=\"_self\" href=\"https://github.com/artginzburg/mesto-react\" className=\"logo header__logo\">\n        <img className=\"logo__img\" alt=\"Mesto\" src={logo} />\n      </a>\n\n    </header>\n  );\n}\n\nexport default Header;","function Card(props) {\n  function handleClick() {\n    props.onCardClick(props.card);\n  }\n\n  return (\n    <li className=\"element\">\n      <img onClick={handleClick} className=\"element__image\" alt={props.card.name} src={props.card.link} />\n      <button type=\"reset\" className=\"element__trash-button\" />\n      <div className=\"element__container\">\n        <h2 className=\"element__title\">{props.card.name}</h2>\n        <div className=\"element__likes\">\n          <button type=\"button\" className=\"element__like-button\" />\n          <p className=\"element__like-counter\">\n            {props.card.likes.length}\n          </p>\n        </div>\n      </div>\n    </li>\n  );\n}\n\nexport default Card;","const cohortId = 'cohort-24';\nconst token = '70313b07-c3c0-40aa-a296-04d0e6bc7885';\n\nconst api = {\n  url: 'mesto.nomoreparties.co',\n  protocol: 'https://',\n  version: 'v1',\n};\n\nclass Api {\n  constructor(options) {\n    this._baseUrl = options.baseUrl;\n    this._headers = options.headers;\n  }\n\n  _handleFetch = res =>\n    res.ok\n      ? res.json()\n      : Promise.reject(`Ошибка: ${res.status}`);\n\n  _customFetch(target, method, body) {\n    const options = {\n      headers: this._headers\n    };\n\n    if (method && (method !== 'GET')) {\n      options.method = method;\n      if (method !== 'DELETE') {\n        options.headers['Content-Type'] = 'application/json';\n      }\n    }\n\n    if (body) {\n      options.body = JSON.stringify(body);\n    }\n\n    return fetch(`${this._baseUrl}/${target}`, options)\n      .then(this._handleFetch);\n  }\n\n  getUserInfo() {\n    return this._customFetch('users/me');\n  }\n\n  getInitialCards() {\n    return this._customFetch('cards');\n  }\n\n  editProfile = ({ name, about }) =>\n    this._customFetch('users/me', 'PATCH', {\n      name,\n      about\n    });\n\n  addCard = (name, link) =>\n    this._customFetch('cards', 'POST', {\n      name,\n      link\n    });\n\n  deleteCard = cardId =>\n    this._customFetch(`cards/${cardId}`, 'DELETE');\n\n  likeCard = cardId =>\n    this._customFetch(`cards/likes/${cardId}`, 'PUT');\n\n  unLikeCard = cardId =>\n    this._customFetch(`cards/likes/${cardId}`, 'DELETE');\n\n  updateAvatar = ({ avatar }) =>\n    this._customFetch('users/me/avatar', 'PATCH', {\n      avatar\n    });\n}\n\nexport default new Api({\n  baseUrl: `${api.protocol}${api.url}/${api.version}/${cohortId}`,\n  headers: {\n    authorization: token\n  }\n}); ","import React from 'react';\n\nimport Card from './Card';\n\nimport api from '../utils/api';\n\nclass Main extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      userName: 'Неизвестный',\n      userDescription: 'Потеряно соединение с сервером',\n      userAvatar: '',\n      cards: [],\n    };\n  }\n\n  componentDidMount() {\n    api.getUserInfo()\n      .then(res =>\n        this.setState({\n          userName: res.name,\n          userDescription: res.about,\n          userAvatar: res.avatar,\n        })\n      );\n\n    api.getInitialCards()\n      .then(res => \n        this.setState({\n          cards: res\n        })\n      );\n  }\n\n  render() {\n    return (\n      <main className=\"content\">\n\n        <section className=\"profile\">\n          <button onClick={this.props.onEditAvatar} type=\"button\" className=\"profile__avatar-container\">\n            <img alt=\"Аватар\" className=\"profile__avatar\" src={this.state.userAvatar} />\n          </button>\n          <div className=\"profile__info\">\n            <h1 className=\"profile__name\">{this.state.userName}</h1>\n            <p className=\"profile__description\">{this.state.userDescription}</p>\n            <button onClick={this.props.onEditProfile} type=\"button\" className=\"profile__edit-button\" />\n          </div>\n          <button onClick={this.props.onAddPlace} type=\"button\" className=\"profile__add-button\" />\n        </section>\n\n        <section className=\"elements\">\n          <ul className=\"elements__list\">\n            {this.state.cards.map(card =>\n              <Card key={card._id} onCardClick={this.props.onCardClick} card={card} />\n            )}\n          </ul>\n        </section>\n\n      </main>\n    );\n  }\n}\n\nexport default Main;","function Footer() {\n  return (\n    <footer className=\"footer\">\n\n      <a target=\"_blank\" rel=\"noreferrer\" href=\"https://github.com/artginzburg\" className=\"footer__copyright\">&copy; 2021 Art Ginzburg</a>\n\n    </footer>\n  );\n}\n\nexport default Footer;","function PopupWithForm(props) {\n  return (\n    <section className={'popup' + (props.isOpen ? ' popup_opened' : '')} id={props.name}>\n      <div className=\"popup__container\">\n\n        <button onClick={props.onClose} type=\"reset\" className=\"popup__close-button\" />\n        <h2 className=\"popup__title\">{props.title}</h2>\n\n        <form className=\"popup__form\" action=\"#\">\n\n          {props.children}\n\n          <button type=\"submit\" className=\"popup__button\">{props.buttonTitle ?? 'Сохранить'}</button>\n\n        </form>\n\n      </div>\n    </section>\n  );\n}\n\nexport default PopupWithForm;","function ImagePopup(props) {\n  return (\n    <section className={'popup popup_type_image' + (props.card.name ? ' popup_opened' : '')} id=\"image-viewer\">\n      <figure className=\"popup__figure\">\n        <button onClick={props.onClose} type=\"button\" className=\"popup__close-button popup__close-button_parent-corners_straight\" />\n        <img className=\"popup__image\" alt={props.card.name} src={props.card.link} />\n        <figcaption className=\"popup__caption\">{props.card.name}</figcaption>\n      </figure>\n    </section>\n  );\n}\n\nexport default ImagePopup;","import React from 'react';\n\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\n\nimport PopupWithForm from './PopupWithForm';\nimport ImagePopup from './ImagePopup';\n\nfunction App() {\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(0);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(0);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(0);\n\n  const [selectedCard, setSelectedCard] = React.useState({});\n\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(1);\n  }\n\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(1);\n  }\n\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(1);\n  }\n\n  function handleCardClick(card) {\n    setSelectedCard(card);\n  }\n\n  function closeAllPopups() {\n    setIsEditAvatarPopupOpen(0);\n    setIsEditProfilePopupOpen(0);\n    setIsAddPlacePopupOpen(0);\n\n    setSelectedCard({});\n  }\n\n  return (\n    <>\n      <Header />\n      <Main\n        onEditProfile={handleEditProfileClick}\n        onAddPlace={handleAddPlaceClick}\n        onEditAvatar={handleEditAvatarClick}\n        onCardClick={handleCardClick}\n      />\n      <Footer />\n\n      <PopupWithForm isOpen={isEditProfilePopupOpen} onClose={closeAllPopups} title=\"Редактировать профиль\" name=\"profile-editor\">\n        <input type=\"text\" autoComplete=\"name\" autoCapitalize=\"words\" className=\"popup__input\" name=\"name\" id=\"profile-name\" placeholder=\"Имя\" minLength=\"2\" maxLength=\"40\" required />\n        <p className=\"popup__error\" id=\"profile-name-error\" />\n\n        <input type=\"text\" className=\"popup__input\" name=\"about\" id=\"profile-about\" placeholder=\"О себе\" minLength=\"2\" maxLength=\"200\" required />\n        <p className=\"popup__error\" id=\"profile-about-error\" />\n      </PopupWithForm>\n\n      <PopupWithForm isOpen={isAddPlacePopupOpen} onClose={closeAllPopups} title=\"Новое место\" name=\"element-editor\" buttonTitle=\"Создать\">\n        <input type=\"text\" className=\"popup__input\" name=\"title\" id=\"element-title\" placeholder=\"Название\" minLength=\"2\" maxLength=\"30\" required />\n        <p className=\"popup__error\" id=\"element-title-error\" />\n\n        <input type=\"url\" className=\"popup__input\" name=\"link\" id=\"element-link\" placeholder=\"Ссылка на картинку\" required />\n        <p className=\"popup__error\" id=\"element-link-error\" />\n      </PopupWithForm>\n\n      <PopupWithForm isOpen={isEditAvatarPopupOpen} onClose={closeAllPopups} title=\"Обновить аватар\" name=\"avatar-editor\">\n        <input type=\"url\" className=\"popup__input\" name=\"avatar\" id=\"profile-avatar\" placeholder=\"Ссылка на картинку\" required />\n        <p className=\"popup__error\" id=\"profile-avatar-error\" />\n      </PopupWithForm>\n\n      <PopupWithForm onClose={closeAllPopups} title=\"Вы уверены?\" name=\"delete-confirmation\" buttonTitle=\"Да\" />\n\n      <ImagePopup card={selectedCard} onClose={closeAllPopups} />\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}